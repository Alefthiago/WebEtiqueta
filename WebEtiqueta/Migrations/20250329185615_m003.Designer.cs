// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebEtiqueta.Models;

#nullable disable

namespace WebEtiqueta.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20250329185615_m003")]
    partial class m003
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebEtiqueta.Models.EmpresaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("EMPRESA_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CnpjCpf")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("EMPRESA_CNPJ_CPF");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("EMPRESA_NOME");

                    b.HasKey("Id");

                    b.ToTable("EMPRESA");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CnpjCpf = "00000000000000",
                            Nome = "Empresa"
                        },
                        new
                        {
                            Id = 2,
                            CnpjCpf = "00748572000153",
                            Nome = "ARMAZÉM FAVEIRO"
                        });
                });

            modelBuilder.Entity("WebEtiqueta.Models.EtiquetaModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ETIQUETA_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Altura")
                        .HasColumnType("integer")
                        .HasColumnName("ETIQUETA_ALTURA");

                    b.Property<int>("Colunas")
                        .HasColumnType("integer")
                        .HasColumnName("ETIQUETA_COLUNAS");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean")
                        .HasColumnName("ETIQUETA_ELIMINADO");

                    b.Property<DateTime?>("EliminadoData")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ETIQUETA_ELIMINADO_DATA");

                    b.Property<int?>("EliminadoPor")
                        .HasColumnType("integer")
                        .HasColumnName("ETIQUETA_ELIMINADO_POR");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer")
                        .HasColumnName("ETIQUETA_EMPRESA_ID");

                    b.Property<int>("EspacoX")
                        .HasColumnType("integer")
                        .HasColumnName("ETIQUETA_ESPACOX");

                    b.Property<int>("EspacoY")
                        .HasColumnType("integer")
                        .HasColumnName("ETIQUETA_ESPACOY");

                    b.Property<int>("Largura")
                        .HasColumnType("integer")
                        .HasColumnName("ETIQUETA_LARGURA");

                    b.Property<int>("Linhas")
                        .HasColumnType("integer")
                        .HasColumnName("ETIQUETA_LINHAS");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ETIQUETA_MODELO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ETIQUETA_NOME");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ETIQUETA_TIPO");

                    b.HasKey("Id");

                    b.HasIndex("EliminadoPor");

                    b.HasIndex("EmpresaId");

                    b.ToTable("ETIQUETA");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Altura = 100,
                            Colunas = 2,
                            Eliminado = false,
                            EmpresaId = 1,
                            EspacoX = 10,
                            EspacoY = 10,
                            Largura = 100,
                            Linhas = 2,
                            Modelo = "Modelo",
                            Nome = "Etiqueta 1",
                            Tipo = "Tipo"
                        },
                        new
                        {
                            Id = 2,
                            Altura = 100,
                            Colunas = 2,
                            Eliminado = false,
                            EmpresaId = 1,
                            EspacoX = 10,
                            EspacoY = 10,
                            Largura = 100,
                            Linhas = 2,
                            Modelo = "Modelo",
                            Nome = "Etiqueta 2",
                            Tipo = "Tipo"
                        },
                        new
                        {
                            Id = 3,
                            Altura = 100,
                            Colunas = 2,
                            Eliminado = false,
                            EmpresaId = 1,
                            EspacoX = 10,
                            EspacoY = 10,
                            Largura = 100,
                            Linhas = 2,
                            Modelo = "Modelo",
                            Nome = "Etiqueta 3",
                            Tipo = "Tipo"
                        },
                        new
                        {
                            Id = 4,
                            Altura = 100,
                            Colunas = 2,
                            Eliminado = false,
                            EmpresaId = 1,
                            EspacoX = 10,
                            EspacoY = 10,
                            Largura = 100,
                            Linhas = 2,
                            Modelo = "Modelo",
                            Nome = "Etiqueta 4",
                            Tipo = "Tipo"
                        },
                        new
                        {
                            Id = 5,
                            Altura = 100,
                            Colunas = 2,
                            Eliminado = false,
                            EmpresaId = 1,
                            EspacoX = 10,
                            EspacoY = 10,
                            Largura = 100,
                            Linhas = 2,
                            Modelo = "Modelo",
                            Nome = "Etiqueta 5",
                            Tipo = "Tipo"
                        },
                        new
                        {
                            Id = 6,
                            Altura = 100,
                            Colunas = 2,
                            Eliminado = false,
                            EmpresaId = 1,
                            EspacoX = 10,
                            EspacoY = 10,
                            Largura = 100,
                            Linhas = 2,
                            Modelo = "Modelo",
                            Nome = "Etiqueta 6",
                            Tipo = "Tipo"
                        },
                        new
                        {
                            Id = 7,
                            Altura = 100,
                            Colunas = 2,
                            Eliminado = false,
                            EmpresaId = 1,
                            EspacoX = 10,
                            EspacoY = 10,
                            Largura = 100,
                            Linhas = 2,
                            Modelo = "Modelo",
                            Nome = "Etiqueta 7",
                            Tipo = "Tipo"
                        },
                        new
                        {
                            Id = 8,
                            Altura = 100,
                            Colunas = 2,
                            Eliminado = false,
                            EmpresaId = 1,
                            EspacoX = 10,
                            EspacoY = 10,
                            Largura = 100,
                            Linhas = 2,
                            Modelo = "Modelo",
                            Nome = "Etiqueta 8",
                            Tipo = "Tipo"
                        },
                        new
                        {
                            Id = 9,
                            Altura = 100,
                            Colunas = 2,
                            Eliminado = false,
                            EmpresaId = 1,
                            EspacoX = 10,
                            EspacoY = 10,
                            Largura = 100,
                            Linhas = 2,
                            Modelo = "Modelo",
                            Nome = "Etiqueta 9",
                            Tipo = "Tipo"
                        },
                        new
                        {
                            Id = 10,
                            Altura = 100,
                            Colunas = 2,
                            Eliminado = false,
                            EmpresaId = 1,
                            EspacoX = 10,
                            EspacoY = 10,
                            Largura = 100,
                            Linhas = 2,
                            Modelo = "Modelo",
                            Nome = "Etiqueta 10",
                            Tipo = "Tipo"
                        });
                });

            modelBuilder.Entity("WebEtiqueta.Models.NivelAcessoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("NIVEL_ACESSO_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AdicionarEtiqueta")
                        .HasColumnType("boolean")
                        .HasColumnName("NIVEL_ACESSO_ADICIONAR_ETIQUETA");

                    b.Property<bool>("AdicionarUsuario")
                        .HasColumnType("boolean")
                        .HasColumnName("NIVEL_ACESSO_ADICIONAR_USUARIO");

                    b.Property<bool>("EditarEtiqueta")
                        .HasColumnType("boolean")
                        .HasColumnName("NIVEL_ACESSO_EDITAR_ETIQUETA");

                    b.Property<bool>("EditarUsuario")
                        .HasColumnType("boolean")
                        .HasColumnName("NIVEL_ACESSO_EDITAR_USUARIO");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean")
                        .HasColumnName("NIVEL_ACESSO_ELIMINADO");

                    b.Property<DateTime?>("EliminadoData")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("NIVEL_ACESSO_ELIMINADO_DATA");

                    b.Property<int?>("EliminadoPor")
                        .HasColumnType("integer")
                        .HasColumnName("NIVEL_ACESSO_ELIMINADO_POR");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer")
                        .HasColumnName("NIVEL_ACESSO_EMPRESA_ID");

                    b.Property<bool>("ExcluirEtiqueta")
                        .HasColumnType("boolean")
                        .HasColumnName("NIVEL_ACESSO_EXCLUIR_ETIQUETA");

                    b.Property<bool>("ExcluirUsuario")
                        .HasColumnType("boolean")
                        .HasColumnName("NIVEL_ACESSO_EXCLUIR_USUARIO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("NIVEL_ACESSO_NOME");

                    b.HasKey("Id");

                    b.HasIndex("EliminadoPor");

                    b.HasIndex("EmpresaId");

                    b.ToTable("NIVEL_ACESSO");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdicionarEtiqueta = true,
                            AdicionarUsuario = true,
                            EditarEtiqueta = true,
                            EditarUsuario = true,
                            Eliminado = false,
                            EmpresaId = 1,
                            ExcluirEtiqueta = true,
                            ExcluirUsuario = true,
                            Nome = "Administrador"
                        });
                });

            modelBuilder.Entity("WebEtiqueta.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("USUARIO_ID");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Eliminado")
                        .HasColumnType("boolean")
                        .HasColumnName("USUARIO_ELIMINADO");

                    b.Property<DateTime?>("EliminadoData")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("USUARIO_ELIMINADO_DATA");

                    b.Property<int?>("EliminadoPor")
                        .HasColumnType("integer")
                        .HasColumnName("USUARIO_ELIMINADO_POR");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("integer")
                        .HasColumnName("USUARIO_EMPRESA_ID");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("USUARIO_LOGIN");

                    b.Property<int>("NivelAcessoId")
                        .HasColumnType("integer")
                        .HasColumnName("USUARIO_NIVEL_ACESSO_ID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("USUARIO_NOME");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)")
                        .HasColumnName("USUARIO_SENHA");

                    b.HasKey("Id");

                    b.HasIndex("EliminadoPor");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("NivelAcessoId");

                    b.ToTable("USUARIO");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Eliminado = false,
                            EmpresaId = 1,
                            Login = "alef",
                            NivelAcessoId = 1,
                            Nome = "alef",
                            Senha = "AQAAAAIAAYagAAAAEAH7K+qacDcQl3Iw8EB617kxQ39wbjr5PfBAJtfxHNS79SSubo1NIBwgOx2KqJh+eA=="
                        },
                        new
                        {
                            Id = 2,
                            Eliminado = false,
                            EmpresaId = 1,
                            Login = "thiago",
                            NivelAcessoId = 1,
                            Nome = "thiago",
                            Senha = "AQAAAAIAAYagAAAAEAH7K+qacDcQl3Iw8EB617kxQ39wbjr5PfBAJtfxHNS79SSubo1NIBwgOx2KqJh+eA=="
                        },
                        new
                        {
                            Id = 3,
                            Eliminado = false,
                            EmpresaId = 2,
                            Login = "thiago",
                            NivelAcessoId = 1,
                            Nome = "thiago",
                            Senha = "AQAAAAIAAYagAAAAEAH7K+qacDcQl3Iw8EB617kxQ39wbjr5PfBAJtfxHNS79SSubo1NIBwgOx2KqJh+eA=="
                        });
                });

            modelBuilder.Entity("WebEtiqueta.Models.EtiquetaModel", b =>
                {
                    b.HasOne("WebEtiqueta.Models.UsuarioModel", "Eliminador")
                        .WithMany("EtiquetasEliminadas")
                        .HasForeignKey("EliminadoPor");

                    b.HasOne("WebEtiqueta.Models.EmpresaModel", "Empresa")
                        .WithMany("Etiquetas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eliminador");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("WebEtiqueta.Models.NivelAcessoModel", b =>
                {
                    b.HasOne("WebEtiqueta.Models.UsuarioModel", "Eliminador")
                        .WithMany("NiveisAcessoEliminados")
                        .HasForeignKey("EliminadoPor");

                    b.HasOne("WebEtiqueta.Models.EmpresaModel", "Empresa")
                        .WithMany("NiveisAcesso")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eliminador");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("WebEtiqueta.Models.UsuarioModel", b =>
                {
                    b.HasOne("WebEtiqueta.Models.UsuarioModel", "Eliminador")
                        .WithMany("UsuariosEliminados")
                        .HasForeignKey("EliminadoPor");

                    b.HasOne("WebEtiqueta.Models.EmpresaModel", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebEtiqueta.Models.NivelAcessoModel", "NivelAcesso")
                        .WithMany("Usuarios")
                        .HasForeignKey("NivelAcessoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eliminador");

                    b.Navigation("Empresa");

                    b.Navigation("NivelAcesso");
                });

            modelBuilder.Entity("WebEtiqueta.Models.EmpresaModel", b =>
                {
                    b.Navigation("Etiquetas");

                    b.Navigation("NiveisAcesso");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("WebEtiqueta.Models.NivelAcessoModel", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("WebEtiqueta.Models.UsuarioModel", b =>
                {
                    b.Navigation("EtiquetasEliminadas");

                    b.Navigation("NiveisAcessoEliminados");

                    b.Navigation("UsuariosEliminados");
                });
#pragma warning restore 612, 618
        }
    }
}
